@if(visible){
    <h3>@Mensaje</h3>
    <button class="btn btn-primary" @onclick="()=> Cerrar(true)">Aceptar</button>
    <button class="btn btn-secondary" @onclick="()=>Cerrar(false)">Cancelar</button>
}   @* Se puede utilzar de ésta manera porque se guarda el método en una variable anónima *@
    @* que es de tipo Action. El método no se invoca.*@
@code{
    private bool visible = false;
    [Parameter] public string Mensaje {get;set;}="";

    public void Mostrar(){
        visible=true;
        StateHasChanged(); //Avisa del cambio
    }
    void Cerrar( bool confirmar)
    {
        visible=false;
        if(confirmar){
            OnConfirmado.InvokeAsync();
        }
    }

    [Parameter] public EventCallback OnConfirmado{get;set;}

    void CerrarYconfirmar(){
        visible=false;
        OnConfirmado.InvokeAsync();
    }
}